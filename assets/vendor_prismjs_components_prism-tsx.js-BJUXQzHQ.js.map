{"version":3,"file":"vendor_prismjs_components_prism-tsx.js-BJUXQzHQ.js","sources":["../../frontend/node_modules/prismjs/components/prism-tsx.js"],"sourcesContent":["(function (Prism) {\n\tvar typescript = Prism.util.clone(Prism.languages.typescript);\n\tPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.tsx['parameter'];\n\tdelete Prism.languages.tsx['literal-property'];\n\n\t// This will prevent collisions between TSX tags and TS generic types.\n\t// Idea by https://github.com/karlhorky\n\t// Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\tvar tag = Prism.languages.tsx.tag;\n\ttag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n\ttag.lookbehind = true;\n}(Prism));\n"],"names":["Prism","typescript","tag"],"mappings":"CAAC,SAAUA,EAAO,CACjB,IAAIC,EAAaD,EAAM,KAAK,MAAMA,EAAM,UAAU,UAAU,EAC5DA,EAAM,UAAU,IAAMA,EAAM,UAAU,OAAO,MAAOC,CAAU,EAG9D,OAAOD,EAAM,UAAU,IAAI,UAC3B,OAAOA,EAAM,UAAU,IAAI,kBAAkB,EAK7C,IAAIE,EAAMF,EAAM,UAAU,IAAI,IAC9BE,EAAI,QAAU,OAAO,qBAAqB,OAAS,MAAQA,EAAI,QAAQ,OAAS,IAAKA,EAAI,QAAQ,KAAK,EACtGA,EAAI,WAAa,EAClB,GAAE,KAAK","x_google_ignoreList":[0]}