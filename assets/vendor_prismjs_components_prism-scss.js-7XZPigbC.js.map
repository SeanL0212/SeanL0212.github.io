{"version":3,"file":"vendor_prismjs_components_prism-scss.js-7XZPigbC.js","sources":["../../frontend/node_modules/prismjs/components/prism-scss.js"],"sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n\t\t{\n\t\t\tpattern: /( )(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|hide|show|with)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n"],"names":[],"mappings":"8HAAA,MAAM,UAAU,KAAO,MAAM,UAAU,OAAO,MAAO,CACpD,QAAW,CACV,QAAS,uCACT,WAAY,IAEb,OAAU,CACT,QAAS,sDACT,OAAQ,CACP,KAAQ,SAEX,GAGC,IAAO,0BAQP,SAAY,CAEX,QAAS,iGACT,OAAQ,CACP,OAAU,CACT,QAAS,IACT,MAAO,aAER,YAAe,UACf,SAAY,wBACf,GAEC,SAAY,CACX,QAAS,2CACT,OAAQ,CACP,SAAY,wBACf,CACA,CACA,CAAC,EAED,MAAM,UAAU,aAAa,OAAQ,SAAU,CAC9C,QAAW,CACV,oHACA,CACC,QAAS,2BACT,WAAY,EACf,CACA,CACA,CAAC,EAED,MAAM,UAAU,aAAa,OAAQ,YAAa,CAEjD,SAAY,wBACb,CAAC,EAED,MAAM,UAAU,aAAa,OAAQ,WAAY,CAChD,kBAAmB,CAClB,QAAS,6BACT,MAAO,WAER,YAAe,CACd,QAAS,UACT,MAAO,YAER,UAAa,CACZ,QAAS,6BACT,MAAO,WAER,QAAW,qBACX,KAAQ,CACP,QAAS,WACT,MAAO,WAER,SAAY,CACX,QAAS,kDACT,WAAY,EACd,CACA,CAAC,EAED,MAAM,UAAU,KAAK,OAAU,OAAO,KAAO,MAAM,UAAU","x_google_ignoreList":[0]}