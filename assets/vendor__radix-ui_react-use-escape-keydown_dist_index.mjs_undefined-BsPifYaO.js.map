{"version":3,"file":"vendor__radix-ui_react-use-escape-keydown_dist_index.mjs_undefined-BsPifYaO.js","sources":["../../frontend/node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs"],"sourcesContent":["// packages/react/use-escape-keydown/src/use-escape-keydown.tsx\nimport * as React from \"react\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nfunction useEscapeKeydown(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n  React.useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener(\"keydown\", handleKeyDown, { capture: true });\n    return () => ownerDocument.removeEventListener(\"keydown\", handleKeyDown, { capture: true });\n  }, [onEscapeKeyDown, ownerDocument]);\n}\nexport {\n  useEscapeKeydown\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["useEscapeKeydown","onEscapeKeyDownProp","ownerDocument","onEscapeKeyDown","useCallbackRef","React.useEffect","handleKeyDown","event"],"mappings":"8KAGA,SAASA,EAAiBC,EAAqBC,EAAgB,YAAY,SAAU,CACnF,MAAMC,EAAkBC,EAAeH,CAAmB,EAC1DI,EAAAA,UAAgB,IAAM,CACpB,MAAMC,EAAiBC,GAAU,CAC3BA,EAAM,MAAQ,UAChBJ,EAAgBI,CAAK,CAEzB,EACA,OAAAL,EAAc,iBAAiB,UAAWI,EAAe,CAAE,QAAS,GAAM,EACnE,IAAMJ,EAAc,oBAAoB,UAAWI,EAAe,CAAE,QAAS,GAAM,CAC5F,EAAG,CAACH,EAAiBD,CAAa,CAAC,CACrC","x_google_ignoreList":[0]}