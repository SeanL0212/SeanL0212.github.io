{"version":3,"file":"vendor_hastscript_factory.js-CUa5YPIL.js","sources":["../../frontend/node_modules/hastscript/factory.js"],"sourcesContent":["'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n"],"names":["find","require$$0","normalize","require$$1","parseSelector","require$$2","spaces","require$$3","commas","require$$4","factory_1","factory","own","schema","defaultTagName","caseSensitive","adjust","createAdjustMap","h","selector","properties","node","children","name","property","isChildren","addProperty","addChild","key","value","info","result","style","parsePrimitives","isNode","tagName","type","nodes","index","length","parsePrimitive","values"],"mappings":"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","x_google_ignoreList":[0]}