{"version":3,"file":"vendor__radix-ui_react-portal_dist_index.mjs_undefined-C_PHySJS.js","sources":["../../frontend/node_modules/@radix-ui/react-portal/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// src/portal.tsx\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PORTAL_NAME = \"Portal\";\nvar Portal = React.forwardRef((props, forwardedRef) => {\n  const { container: containerProp, ...portalProps } = props;\n  const [mounted, setMounted] = React.useState(false);\n  useLayoutEffect(() => setMounted(true), []);\n  const container = containerProp || mounted && globalThis?.document?.body;\n  return container ? ReactDOM.createPortal(/* @__PURE__ */ jsx(Primitive.div, { ...portalProps, ref: forwardedRef }), container) : null;\n});\nPortal.displayName = PORTAL_NAME;\nvar Root = Portal;\nexport {\n  Portal,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["PORTAL_NAME","Portal","React.forwardRef","props","forwardedRef","containerProp","portalProps","mounted","setMounted","React.useState","useLayoutEffect","container","ReactDOM","jsx","Primitive"],"mappings":"2aAQA,IAAIA,EAAc,SACdC,EAASC,EAAAA,WAAiB,CAACC,EAAOC,IAAiB,CACrD,KAAM,CAAE,UAAWC,EAAe,GAAGC,CAAW,EAAKH,EAC/C,CAACI,EAASC,CAAU,EAAIC,EAAAA,SAAe,EAAK,EAClDC,EAAgB,IAAMF,EAAW,EAAI,EAAG,CAAA,CAAE,EAC1C,MAAMG,EAAYN,GAAiBE,GAAW,YAAY,UAAU,KACpE,OAAOI,EAAYC,EAAS,aAA6BC,EAAAA,IAAIC,EAAU,IAAK,CAAE,GAAGR,EAAa,IAAKF,CAAY,CAAE,EAAGO,CAAS,EAAI,IACnI,CAAC,EACDV,EAAO,YAAcD","x_google_ignoreList":[0]}