{"version":3,"file":"vendor_parse-entities_decode-entity.browser.js-4FDDBJ65.js","sources":["../../frontend/node_modules/parse-entities/decode-entity.browser.js"],"sourcesContent":["'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `Â¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n"],"names":["el","semicolon","decodeEntity_browser","decodeEntity","characters","entity","char"],"mappings":"uCAIA,IAAIA,EAEAC,EAAY,GAEhBC,EAAiBC,EAEjB,SAASA,EAAaC,EAAY,CAChC,IAAIC,EAAS,IAAMD,EAAa,IAC5BE,EAWJ,OATAN,EAAKA,GAAM,SAAS,cAAc,GAAG,EACrCA,EAAG,UAAYK,EACfC,EAAON,EAAG,YAONM,EAAK,WAAWA,EAAK,OAAS,CAAC,IAAML,GAAaG,IAAe,QAK9DE,IAASD,EAJP,GAIwBC,CACnC","x_google_ignoreList":[0]}